{"version":3,"file":"static/js/591.a551b08a.chunk.js","mappings":"2MA6WA,QAtWA,WACE,MAAOA,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,KAC5CG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,KAEjC,KAAEK,KADSC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,YAAWC,EAAAA,IACtBC,EAASJ,EAAKI,QACbC,EAAUC,IAAeX,EAAAA,EAAAA,UAAS,OAClCY,EAAYC,IAAiBb,EAAAA,EAAAA,UAAS,KACtCc,EAAoBC,IAAyBf,EAAAA,EAAAA,UAAS,KAqB7DgB,EAAAA,EAAAA,YAAU,KACaC,WACnB,IACE,MAGMC,SAHiBC,EAAAA,EAAMC,IAAI,GAADC,OAC3BC,EAAAA,EAAO,8CAAAD,OAA6CZ,KAEzBc,KAG1BC,QAA2BC,QAAQC,IACvCR,EAAeS,KAAIV,UACjB,IAAK,IAADW,EACF,MAAMC,QAA6BV,EAAAA,EAAMC,IAAI,GAADC,OACvCC,EAAAA,EAAO,0BAAAD,OAAyBS,EAAOC,YAQtCC,SAL4Bb,EAAAA,EAAMC,IAAI,GAADC,OACtCC,EAAAA,EAAO,2BAAAD,OAA0BS,EAAOC,aAIDR,KACtCU,EACJC,MAAMC,QAAQH,IAAoBA,EAAgBI,OAAS,EACvDJ,EAAgB,GAAGK,aACnB,EAEN,MAAO,IACFP,EACHQ,eAAwC,QAAzBV,EAAAC,EAAqBN,YAAI,IAAAK,OAAA,EAAzBA,EAA2BU,gBAAiB,EAC3DD,aAAcJ,GAAe,EAEjC,CAAE,MAAOM,GAKP,OAJAC,QAAQD,MAAM,kCAADlB,OACuBS,EAAOC,UAAS,KAClDQ,GAEK,IACFT,EACHQ,cAAe,EACfD,aAAc,EAElB,MAIJjC,EAAWoB,GACXtB,EAAiBsB,GACbA,EAAmBY,OAAS,GAC9BzB,EAAYa,EAAmB,GAAGO,UAEtC,CAAE,MAAOQ,GACPC,QAAQD,MAAM,mCAAoCA,EACpD,GAGFE,EAAc,GACb,CAAChC,KAEJO,EAAAA,EAAAA,YAAU,KACiBC,WACvB,IACE,MAAMyB,QAAiBvB,EAAAA,EAAMC,IAAI,GAADC,OAC3BC,EAAAA,EAAO,gCAEZT,EAAc6B,EAASnB,KACzB,CAAE,MAAOgB,GACPC,QAAQD,MAAM,8BAA+BA,EAC/C,GAGFI,EAAkB,GACjB,KACH3B,EAAAA,EAAAA,YAAU,KACc4B,MACpB,IAAIC,EAAkB,IAAI1C,GAEtBL,IACF+C,EAAkBA,EAAgBC,QAAQhB,GACxCA,EAAOiB,aAAaC,cAAcC,SAASnD,EAAYkD,kBAIvDlC,IACF+B,EAAkBA,EAAgBC,QAC/BhB,GAAWA,EAAOoB,gBAAkBC,SAASrC,MAIlDZ,EAAiB2C,EAAgB,EAGnCD,EAAe,GACd,CAAC9C,EAAagB,EAAoBX,IA0BrC,MAOOiD,EAAYC,IAAiBrD,EAAAA,EAAAA,UAASsD,OAAOC,YACpD,GAAsB,qBAAXD,OAAwB,CAChB,IAAIE,gBAAe,SAC3BC,QAAQC,SAASC,KAC5B,CAYA,OAVA3C,EAAAA,EAAAA,YAAU,KACR,IAAI4C,EACJ,MAAMC,EAAeA,KACnBC,aAAaF,GACbA,EAAUG,YAAW,IAAMV,EAAcC,OAAOC,aAAa,IAAI,EAInE,OADAD,OAAOU,iBAAiB,SAAUH,GAC3B,IAAMP,OAAOW,oBAAoB,SAAUJ,EAAa,GAC9D,KAEDK,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,aAAYD,SAAA,EACzBE,EAAAA,EAAAA,KAAA,OACEC,IAAKC,EAAQ,MACbC,IAAG,gBACHJ,UAAU,WACVK,QAAQ,UAEVJ,EAAAA,EAAAA,KAAA,OAAKD,UAAU,UAASD,UACtBE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBAAiBD,UAC9BE,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEC,WAAY,MAAOC,SAAU,QAAST,SAAC,iDAM1DE,EAAAA,EAAAA,KAAA,WAASD,UAAU,iBAAgBD,UACjCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,aAAYD,UACzBF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,OAAMD,SAAA,EACnBE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,8BAA6BD,UAC1CF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iBAAgBD,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACEE,EAAAA,EAAAA,KAAA,KACED,UAAU,qCACVM,MAAO,CAAEG,MAAO,aACZ,QAERR,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLC,YAAY,iEACZC,MAAOnF,EACPuE,UAAU,gBACVa,SAzDWC,IACzBpF,EAAeoF,EAAMC,OAAOH,MAAM,KA0DtBf,EAAAA,EAAAA,MAAA,KAAGmB,KAAK,IAAIhB,UAAU,kCAAiCD,SAAA,CAAC,qBAClD,aAIVE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,8BAA6BD,UAC1CF,EAAAA,EAAAA,MAAA,UACEoB,KAAK,aACLL,MAAOnE,EACPoE,SAhEYK,IACxBxE,EAAsBwE,EAAEH,OAAOH,MAAM,EAgEzBO,GAAG,OACHnB,UAAU,aAAYD,SAAA,EAEtBE,EAAAA,EAAAA,KAAA,UAAQW,MAAM,GAAEb,SAAC,gDAChBxD,EAAWe,KAAK8D,IACfnB,EAAAA,EAAAA,KAAA,UAAqBW,MAAOQ,EAAID,GAAGpB,SAChCqB,EAAIC,OADMD,EAAID,YAMvBlB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,wCAKrBC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,YAAWD,UACxBE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iEAAgED,SAC5EnE,EAAc0B,KAAI,CAACG,EAAQ6D,KAAK,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAC/BvC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAEwB,OAArBtC,EAAOC,YACNuC,EAAAA,EAAAA,KAAA,OAAKD,UAAU,8BAA6BD,UAC1CE,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CACH/B,MAAO,CAAEgC,eAAgB,QACzBC,GAAE,oBAAAvF,OAAsBS,EAAOC,WAAYqC,UAE3CF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iBAAgBD,SAAA,EAC7BE,EAAAA,EAAAA,KAAA,OACEC,IAAG,wCAAAlD,OAAuD,QAAvDuE,EAA0C9D,EAAOA,cAAM,IAAA8D,OAAA,EAAbA,EAAeiB,KAC5DxC,UAAU,kCACVI,IAAkB,QAAfoB,EAAE/D,EAAOA,cAAM,IAAA+D,OAAA,EAAbA,EAAe9C,aACpB2B,QAAQ,UAEVR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWD,SAAA,EACxBE,EAAAA,EAAAA,KAAA,OAAAF,UACEE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,qBAAoBD,UACjB,QAAb0B,EAAAhE,EAAOA,cAAM,IAAAgE,GAAY,QAAZC,EAAbD,EAAegB,kBAAU,IAAAf,OAAZ,EAAbA,EAA2BL,QAC1B,+BAGNxB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iCAAgCD,SAAA,EAC7CE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,oBAAmBD,SAChB,QADgB4B,EAC7BlE,EAAOA,cAAM,IAAAkE,OAAA,EAAbA,EAAejD,gBAElBuB,EAAAA,EAAAA,KAAA,KAAGD,UAAU,oBAAmBD,SAChB,QADgB6B,EAC7BnE,EAAOA,cAAM,IAAAmE,GAAS,QAATC,EAAbD,EAAec,eAAO,IAAAb,OAAT,EAAbA,EAAwBc,mBAG7B1C,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEsC,UAAW,UACxB/C,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iCAAgCD,SAAA,EAC7CE,EAAAA,EAAAA,KAAA,KACED,UAAU,6BACVM,MAAO,CAAEG,MAAO,cAElBZ,EAAAA,EAAAA,MAAA,KAAGG,UAAU,uBAAsBD,SAAA,CAChCtC,EAAOQ,cAAc,gCAExBgC,EAAAA,EAAAA,KAAA,KACED,UAAU,uCACVM,MAAO,CAAEG,MAAO,cAElBZ,EAAAA,EAAAA,MAAA,KAAGG,UAAU,uBAAsBD,SAAA,CAChCtC,EAAOO,aAAa,0BAEvBiC,EAAAA,EAAAA,KAAA,KACED,UAAU,8BACVM,MAAO,CAAEG,MAAO,cAElBR,EAAAA,EAAAA,KAAA,KAAGD,UAAU,uBAAsBD,SAChC,IAAI8C,KACU,QADNf,EACPrE,EAAOA,cAAM,IAAAqE,OAAA,EAAbA,EAAegB,YACfC,mCAlDoCzB,GA4D5B,OAAvB7D,EAAOuF,cACN/C,EAAAA,EAAAA,KAAA,OAAKD,UAAU,8BAA6BD,UAC1CE,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CACH/B,MAAO,CAAEgC,eAAgB,QACzBC,GAAE,oBAAAvF,OAAqC,QAArC+E,EAAsBtE,EAAOwF,gBAAQ,IAAAlB,OAAA,EAAfA,EAAiBZ,IAAKpB,UAE9CF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iBAAgBD,SAAA,EAC7BE,EAAAA,EAAAA,KAAA,OACEC,IAAKgD,EACLlD,UAAU,kCACVI,IAAoB,QAAjB4B,EAAEvE,EAAOwF,gBAAQ,IAAAjB,OAAA,EAAfA,EAAiBmB,oBACtB9C,QAAQ,UAEVR,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWD,SAAA,EACxBE,EAAAA,EAAAA,KAAA,OAAAF,UACEE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,qBAAoBD,UACf,QAAfkC,EAAAxE,EAAOwF,gBAAQ,IAAAhB,OAAA,EAAfA,EAAiBmB,WAChB,6BAGNnD,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iCAAgCD,UAC7CE,EAAAA,EAAAA,KAAA,KAAGD,UAAU,oBAAmBD,SACd,QADcmC,EAC7BzE,EAAOwF,gBAAQ,IAAAf,OAAA,EAAfA,EAAiBiB,yBAGtBlD,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAAEsC,UAAW,UACxB/C,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iCAAgCD,SAAA,EAC7CE,EAAAA,EAAAA,KAAA,KACED,UAAU,6BACVM,MAAO,CAAEG,MAAO,cAElBR,EAAAA,EAAAA,KAAA,KAAGD,UAAU,uBAAsBD,SAAC,uDACpCE,EAAAA,EAAAA,KAAA,KACED,UAAU,uCACVM,MAAO,CAAEG,MAAO,cAElBZ,EAAAA,EAAAA,MAAA,KAAGG,UAAU,uBAAsBD,SAAA,CAAC,uEACpB,IACE,QADCoC,EAChB1E,EAAOwF,gBAAQ,IAAAd,GAAO,QAAPC,EAAfD,EAAiBkB,aAAK,IAAAjB,OAAP,EAAfA,EAAwBkB,QACvB,CAACC,EAAOC,KAAI,IAAAC,EAAA,OACVF,IAAoB,QAAXE,EAAAD,EAAKE,cAAM,IAAAD,OAAA,EAAXA,EAAa1F,SAAU,EAAE,GACpC,kBAxCoCuD,KAiDnD,UAMf,C","sources":["Pages/MyCourses.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport { API_URL } from \"../App\";\r\nimport courseimg from \"../assets/course.webp\";\r\n\r\nfunction MyCourses() {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [courses, setCourses] = useState([]);\r\n  const navigate = useNavigate();\r\n  const { user } = useContext(UserContext);\r\n  const userId = user.userId;\r\n  const [courseId, setCourseId] = useState(null);\r\n  const [department, setDepartment] = useState([]);\r\n  const [selectedDepartment, setSelectedDepartment] = useState(\"\");\r\n\r\n  // useEffect(() => {\r\n  //   const fetchCourses = async () => {\r\n  //     try {\r\n  //       const response = await axios.get(\r\n  //         `${API_URL}/PaymentsCourse/getApprovedCoursesForUser/${userId}`\r\n  //       );\r\n  //       setCourses(response.data);\r\n  //       setSearchResults(response.data);\r\n  //       if (response.data.length > 0) {\r\n  //         setCourseId(response.data[0].course_id);\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error(\"Error fetching approved courses:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchCourses();\r\n  // }, [userId]);\r\n\r\n  useEffect(() => {\r\n    const fetchCourses = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${API_URL}/PaymentsCourse/getApprovedCoursesForUser/${userId}`\r\n        );\r\n        const fetchedCourses = response.data;\r\n\r\n        // Fetch additional data (student count and lesson count) for each course\r\n        const coursesWithDetails = await Promise.all(\r\n          fetchedCourses.map(async (course) => {\r\n            try {\r\n              const studentCountResponse = await axios.get(\r\n                `${API_URL}/Courses/users-counts/${course.course_id}`\r\n              );\r\n\r\n              const lessonCountResponse = await axios.get(\r\n                `${API_URL}/Courses/lesson-counts/${course.course_id}`\r\n              );\r\n\r\n              // Ensure we access the lesson_count correctly from the response\r\n              const lessonCountData = lessonCountResponse.data;\r\n              const lessonCount =\r\n                Array.isArray(lessonCountData) && lessonCountData.length > 0\r\n                  ? lessonCountData[0].lesson_count\r\n                  : 0;\r\n\r\n              return {\r\n                ...course,\r\n                student_count: studentCountResponse.data?.student_count || 0,\r\n                lesson_count: lessonCount || 0,\r\n              };\r\n            } catch (error) {\r\n              console.error(\r\n                `Error fetching data for course ${course.course_id}:`,\r\n                error\r\n              );\r\n              return {\r\n                ...course,\r\n                student_count: 0,\r\n                lesson_count: 0,\r\n              };\r\n            }\r\n          })\r\n        );\r\n\r\n        setCourses(coursesWithDetails);\r\n        setSearchResults(coursesWithDetails);\r\n        if (coursesWithDetails.length > 0) {\r\n          setCourseId(coursesWithDetails[0].course_id);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching approved courses:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCourses();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    const fetchDepartments = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${API_URL}/departments/getDepartments`\r\n        );\r\n        setDepartment(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching departments:\", error);\r\n      }\r\n    };\r\n\r\n    fetchDepartments();\r\n  }, []);\r\n  useEffect(() => {\r\n    const filterCourses = () => {\r\n      let filteredCourses = [...courses]; // Ensure a fresh copy of courses\r\n\r\n      if (searchQuery) {\r\n        filteredCourses = filteredCourses.filter((course) =>\r\n          course.subject_name.toLowerCase().includes(searchQuery.toLowerCase())\r\n        );\r\n      }\r\n\r\n      if (selectedDepartment) {\r\n        filteredCourses = filteredCourses.filter(\r\n          (course) => course.department_id === parseInt(selectedDepartment)\r\n        );\r\n      }\r\n\r\n      setSearchResults(filteredCourses);\r\n    };\r\n\r\n    filterCourses();\r\n  }, [searchQuery, selectedDepartment, courses]); // Added `courses` dependency\r\n\r\n  // useEffect(() => {\r\n  //   const filterCourses = () => {\r\n  //     let filteredCourses = courses;\r\n\r\n  //     // Filter by search query\r\n  //     if (searchQuery) {\r\n  //       filteredCourses = filteredCourses.filter((course) =>\r\n  //         course.subject_name.toLowerCase().includes(searchQuery.toLowerCase())\r\n  //       );\r\n  //     }\r\n\r\n  //     // Filter by selected department\r\n  //     if (selectedDepartment) {\r\n  //       filteredCourses = filteredCourses.filter(\r\n  //         (course) => course.department_id === parseInt(selectedDepartment)\r\n  //       );\r\n  //     }\r\n\r\n  //     setSearchResults(filteredCourses);\r\n  //   };\r\n\r\n  //   filterCourses();\r\n  // }, [searchQuery, selectedDepartment]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  const handleDepartment = (e) => {\r\n    setSelectedDepartment(e.target.value);\r\n  };\r\n  const [windowSize, setWindowSize] = useState(window.innerWidth);\r\n  if (typeof window !== \"undefined\") {\r\n    const observer = new ResizeObserver(() => {});\r\n    observer.observe(document.body);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    let timeout;\r\n    const handleResize = () => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => setWindowSize(window.innerWidth), 200); // Debounce update\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  return (\r\n    <>\r\n      {/* background image */}\r\n      <div className=\"slide-item\">\r\n        <img\r\n          src={require(\"../assets/corsee.webp\")}\r\n          alt={`Contact Video`}\r\n          className=\"img_home\"\r\n          loading=\"lazy\"\r\n        />\r\n        <div className=\"overlay\">\r\n          <div className=\"overlay-content\">\r\n            <h1 style={{ fontWeight: \"700\", fontSize: \"64px\" }}>دوراتي</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* End background image */}\r\n\r\n      <section className=\"margin_section\">\r\n        <div className=\"container \">\r\n          <div className=\"row \">\r\n            <div className=\"col-lg-3 col-md-4 col-sm-12\">\r\n              <div className=\"navbar__search\">\r\n                <span>\r\n                  <i\r\n                    className=\"fa-solid fa-magnifying-glass fa-sm\"\r\n                    style={{ color: \"#833988\" }}\r\n                  ></i>{\" \"}\r\n                </span>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"ابحث عن مادة\"\r\n                  value={searchQuery}\r\n                  className=\"search_course\"\r\n                  onChange={handleInputChange}\r\n                />\r\n                <a href=\"#\" className=\"btn btn-s purple_btn search_btn\">\r\n                  بحث{\" \"}\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-3 col-md-4 col-sm-12\">\r\n              <select\r\n                name=\"department\"\r\n                value={selectedDepartment}\r\n                onChange={handleDepartment}\r\n                id=\"lang\"\r\n                className=\"select_dep\"\r\n              >\r\n                <option value=\"\">اختر قسم</option>\r\n                {department.map((dep) => (\r\n                  <option key={dep.id} value={dep.id}>\r\n                    {dep.title}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-sm-12\"></div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row d-flex flex-wrap justify-content-center align-items-center\">\r\n          {searchResults.map((course, index) => (\r\n            <>\r\n              {/* Render Course Card if course_id exists */}\r\n              {course.course_id !== null && (\r\n                <div className=\"col-lg-4 col-md-6 col-sm-12\" key={index}>\r\n                  <Link\r\n                    style={{ textDecoration: \"none\" }}\r\n                    to={`/mycoursedetails/${course.course_id}`}\r\n                  >\r\n                    <div className=\"card card_cont\">\r\n                      <img\r\n                        src={`https://res.cloudinary.com/dqimsdiht/${course.course?.img}`}\r\n                        className=\"card-img-top img-fluid card_img\"\r\n                        alt={course.course?.subject_name}\r\n                        loading=\"lazy\"\r\n                      />\r\n                      <div className=\"card-body\">\r\n                        <div>\r\n                          <p className=\"card-text card_dep\">\r\n                            {course.course?.Department?.title ||\r\n                              \"No Department Available\"}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          <p className=\"course_title_card\">\r\n                            {course.course?.subject_name}\r\n                          </p>\r\n                          <p className=\"teacher_name_card\">\r\n                            {course.course?.teacher?.teacher_name}\r\n                          </p>\r\n                        </div>\r\n                        <hr style={{ marginTop: \"1px\" }} />\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          <i\r\n                            className=\"fa-solid fa-file card_icon\"\r\n                            style={{ color: \"#f8c36e\" }}\r\n                          ></i>\r\n                          <p className=\"details_courses_card\">\r\n                            {course.student_count} طالب\r\n                          </p>\r\n                          <i\r\n                            className=\"fa-solid fa-graduation-cap card_icon\"\r\n                            style={{ color: \"#f8c36e\" }}\r\n                          ></i>\r\n                          <p className=\"details_courses_card\">\r\n                            {course.lesson_count} درس\r\n                          </p>\r\n                          <i\r\n                            className=\"fa-solid fa-clock card_icon\"\r\n                            style={{ color: \"#f8c36e\" }}\r\n                          ></i>\r\n                          <p className=\"details_courses_card\">\r\n                            {new Date(\r\n                              course.course?.created_at\r\n                            ).toLocaleDateString()}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n\r\n              {/* Render Test Bank Card if TestBank.id exists */}\r\n              {course.testBank_id !== null && (\r\n                <div className=\"col-lg-4 col-md-6 col-sm-12\" key={index}>\r\n                  <Link\r\n                    style={{ textDecoration: \"none\" }}\r\n                    to={`/questiondetails/${course.TestBank?.id}`}\r\n                  >\r\n                    <div className=\"card card_cont\">\r\n                      <img\r\n                        src={courseimg} // Assuming courseimg is a default image for test bank cards\r\n                        className=\"card-img-top img-fluid card_img\"\r\n                        alt={course.TestBank?.testBankCourse_name}\r\n                        loading=\"lazy\"\r\n                      />\r\n                      <div className=\"card-body\">\r\n                        <div>\r\n                          <p className=\"card-text card_dep\">\r\n                            {course.TestBank?.semester ||\r\n                              \"No semester Available\"}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          <p className=\"course_title_card\">\r\n                            {course.TestBank?.testBankCourse_name}\r\n                          </p>\r\n                        </div>\r\n                        <hr style={{ marginTop: \"1px\" }} />\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          <i\r\n                            className=\"fa-solid fa-file card_icon\"\r\n                            style={{ color: \"#f8c36e\" }}\r\n                          ></i>\r\n                          <p className=\"details_courses_card\">بنك اسئلة</p>\r\n                          <i\r\n                            className=\"fa-solid fa-graduation-cap card_icon\"\r\n                            style={{ color: \"#f8c36e\" }}\r\n                          ></i>\r\n                          <p className=\"details_courses_card\">\r\n                            عدد المواضيع:{\" \"}\r\n                            {course.TestBank?.Units?.reduce(\r\n                              (total, unit) =>\r\n                                total + (unit.Topics?.length || 0),\r\n                              0\r\n                            )}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyCourses;\r\n"],"names":["searchQuery","setSearchQuery","useState","searchResults","setSearchResults","courses","setCourses","user","useNavigate","useContext","UserContext","userId","courseId","setCourseId","department","setDepartment","selectedDepartment","setSelectedDepartment","useEffect","async","fetchedCourses","axios","get","concat","API_URL","data","coursesWithDetails","Promise","all","map","_studentCountResponse","studentCountResponse","course","course_id","lessonCountData","lessonCount","Array","isArray","length","lesson_count","student_count","error","console","fetchCourses","response","fetchDepartments","filterCourses","filteredCourses","filter","subject_name","toLowerCase","includes","department_id","parseInt","windowSize","setWindowSize","window","innerWidth","ResizeObserver","observe","document","body","timeout","handleResize","clearTimeout","setTimeout","addEventListener","removeEventListener","_jsxs","_Fragment","children","className","_jsx","src","require","alt","loading","style","fontWeight","fontSize","color","type","placeholder","value","onChange","event","target","href","name","e","id","dep","title","index","_course$course","_course$course2","_course$course3","_course$course3$Depar","_course$course4","_course$course5","_course$course5$teach","_course$course6","_course$TestBank","_course$TestBank2","_course$TestBank3","_course$TestBank4","_course$TestBank5","_course$TestBank5$Uni","Link","textDecoration","to","img","Department","teacher","teacher_name","marginTop","Date","created_at","toLocaleDateString","testBank_id","TestBank","courseimg","testBankCourse_name","semester","Units","reduce","total","unit","_unit$Topics","Topics"],"sourceRoot":""}